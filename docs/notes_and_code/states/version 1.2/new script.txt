function Grid(sp,ep){

  var dlat = sp.lat()-ep.lat(); //difference lat/lng
  var dlng = sp.lng()-ep.lng();
  var center = new google.maps.LatLng(sp.lat()-dlat/2, sp.lng()-dlng/2); // center between dest and orig
  var cm = new google.maps.Marker({position:center, map:map}); //center marker
  var hdist = Math.sqrt(dlat*dlat + dlng*dlng); //half dist from orig to dest
  //basic measures

  //function checks if a point is in the circle with center at <center> and radius of <hdist>
  function InCircle(lat,lng){
    if(Math.pow(lat-center.lat(),2)+Math.pow(lng-center.lng(),2) < Math.pow(hdist,2)){
      return true;
    }else{
      return false;
    }
  }

  var lpts = [];
  var Roads = [];
  for(var i=0; i<Math.PI*2; i+=Math.PI/36){
    lpts.push(new google.maps.LatLng(center.lat()+hdist*Math.sin(i), center.lng()+hdist*Math.cos(i)));
  }
  var Poly = new google.maps.Polygon({path:lpts});
  Poly.setMap(map);
  //draws circle

  for(var i=center.lat()-hdist; i<center.lat()+hdist; i+=0.004){
    for(var j=center.lng()-hdist; j<center.lng()+hdist; j+=0.004){
      //iterates through grid with 0.004 deg intervals
      if(InCircle(i,j)){ // checks if coord is in circle
        var latlng = new google.maps.LatLng(i,j);
        var Marker = new google.maps.Marker({position:latlng, map:map});

        //finds address
        geocoder.geocode({'latLng':latlng}, function(results, status){
          console.log(status);
          if(status==google.maps.GeocoderStatus.OK){
            var street = results[0].address_components[1].long_name;
            console.log(street);
            if(Roads.indexOf(street) === -1){
              //adds road name to <Roads> if it is not there already
              Roads.push(street);
              console.log(results);
            }
          }
        });
      }
    }
  }
  console.log(Roads);
  //Output <Roads> list
}